blueprint:
  name: thermo room calibration
  description: Calibrates temperature for a thermo unit based on external thermometer.
  domain: automation
  input:
    room_temp_sensor:
      name: Room thermometer
      description: Sensor for room temperature.
      selector:
        entity:
          domain:
          - sensor
          device_class:
          - temperature
          multiple: false
    thermostat:
      name: Thermostat
      description: Thermostat unit
      selector:
        entity:
          domain:
          - climate
    wanted_temp_input:
      name: Wanted temperature
      description: Temperature input for wanted temperature.
      selector:
        entity:
          domain:
          - input_number
          multiple: false
    offset_input:
      name: thermo offset
      description: temperature offset. If negative thermo temperature will be set to calculated calibrated value minus offset.
      selector:
        number:
          min: -5
          max: 5
          mode: slider
          step: 0.5
    heating_main_switch:
      name: Main switch for heating
      description: input boolean to turn heating on or off
      selector: 
        entity:
          domain:
          - input_boolean
          multiple: false

  source_url: https://github.com/martin-olsen/home-assistant-scripts/blob/main/blueprints/automation/eve_thermo_single_room_calibration.yaml
mode: single
trigger:
- platform: time_pattern
  minutes: /10
condition: 
- condition: state
  entity_id: !input heating_main_switch
  state: "on"
action:
- variables:
    thermo_id: !input thermostat
    thermo_measured_temp: '{{ state_attr( thermo_id, ''current_temperature'') | float }}' 
    room_temp_id: !input room_temp_sensor
    room_temp: '{{ states(room_temp_id) | float }}'
    wanted_temp_id: !input wanted_temp_input
    wanted_temp: '{{ states(wanted_temp_id) | float }}'
    calibrated_temp: '{{ (((wanted_temp + thermo_measured_temp - room_temp) * 2) | round(0)) / 2 }}'
    offset: !input offset_input

- service: climate.set_temperature
  target:
    entity_id: '{{ thermo_id }}'   
  data:
    temperature: '{{ calibrated_temp + offset }}'
